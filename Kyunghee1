#include<stdio.h>

#include<stdlib.h>

#include<windows.h>

#include<direct.h>

#include<io.h>

 

/* 관리자모드 X */

/* SSWLAUNCHER와 결합해야함 -> Updated < Not need! > *

 

int firout()

{

	int k;

	printf("===============================================================================\n");

	printf("      Security Computer System - Wonseok , SSW 에 오신것을 환영합니다.\n");

	printf("===============================================================================\n");

	printf("프로그램 소개 : 1\n프로그램 제작자 소개 : 2\n프로그램 버전 및 역사 소개 : 3\n프로그램 실행 : 4\n");

	printf("입력 : ");

	scanf("%d",&k);

	return k;

}

 

int introProgram()

{

	int k;

	system("cls");

	printf("===============================================================================\n");

	printf("                                   about SSW\n");

	printf("===============================================================================\n");

	printf("\n");

	printf("SSW는 Microsoft - Visual C++ 6.0 을 기반으로 만들어졌으며, 윈도우 7을 중심으로 개발되었습니다.\n");

	printf("본 프로그램은 DOS 명령어를 사용, 시스템을 검사하기 때문에 일부 시스템에서는 바이러스로 오인할 가능성이 있으나, 바이러스는 절대로 아니며 간단하게 확인작업만 진행합니다.\n");

	printf("SSW는 사용자 중심적 개발, 즉 개발자 맘대로 개발한것이 아닌 사용자가 사용하기 편리하게 개발한 프로그램입니다. 타게트는 컴퓨터를 그저 문서 작성, 또는 게임 용으로 이용하는 청소는 혹은 청장년층 등 대한민국 대부분의");

	printf("실행되는 컴퓨터의 보안 상태를 점검하기 위한 프로그램입니다.\n");

	printf("본 프로그램은 다음과같은 검사를 진행합니다.\n");

	printf("1. Config/ 시스템 폴더에 접근 가능 여부(엑세스 거부시 보안점검 완료)\n");

	printf("2. 관리자 계정 존재 여부와 암호 설정 여부 확인\n");

	printf("3. 백신 프로그램 존재 유무 확인, 2개 이상일 경우 위험\n");

	printf("===============================================================================\n");

	printf("프로그램 제작자 소개 : 2\n프로그램 버전 및 역사 소개 : 3\n프로그램 실행 : 4\n");
  // Updated -> Maker introduction doesn't view
	printf("입력 : ");scanf("%d",&k);

	return k;

}

 

int intromaker()

{

	int k;

	system("cls");/*

	printf("===============================================================================\n");

	printf("                                 about 장원석                                  \n");

	printf("===============================================================================\n");

	printf(" !- deleted from Project -! \n");

	printf(" !- deleted from Project -! \n");

	printf(" !- deleted from Project -! \n");

	printf(" !- deleted from Project -! \n");

	printf(" !- deleted from Project -! \n");

	printf("===============================================================================\n");*/

	printf("제작자에 대한 소개는 위 프로그램 버전에서 제공되지 않습니다.\n");

	printf("프로그램 소개 : 1\n프로그램 버전 및 역사 소개 : 3\n프로그램 실행 : 4\n");

	printf("입력 : ");scanf("%d",&k);

	return k;

}

 

int introhistory()

{

	int k;

	system("cls");

	printf("===============================================================================\n");

	printf("                        프로그램 버전 및 역사 소개\n");

	printf("===============================================================================\n");

	/*printf("프로그램명 : Security Computer System - SSW\n");

	printf("버      전 : 0.2 / alpha -> 1.0 (simulated) -> 1.1 (Explained) -> 2.0 (Project) \n");

	printf("업데이트   : 1\n");

	printf("제  작  자 : Jang Won Seok, Kim Hae Lim, Kim Soe Yun\n");

	printf("파일규격   : SSW.CCP / SSW.EXE / SSWLAUNCHER.CPP / SSWLAUNCHER.EXE\n");
  // Updated -> Don't need Launcher
	printf("AUDIO BlockB - Burn Out.wav / LaunchingSSW.bmp / ReadyForSSW.bmp\n");*/

	printf("본 프로그램 버전에서는 프로그램 버전 및 역사 소개를 제공하지 않습니다.\n");

	printf("===============================================================================\n");

	printf("프로그램 소개 : 1\n제작자 소개 : 2\n프로그램 실행 : 4\n");

	scanf("%d",&k);

	return k;

}

 

int main()

{

	int DangerScore=0;

	int SafeScore=0;

	char s,Cfirout;

	Cfirout=firout();

	while(1){

		if(Cfirout == 1){ Cfirout = introProgram(); }

		else if(Cfirout == 2){ Cfirout = intromaker(); }

		else if(Cfirout == 3){ Cfirout = introhistory(); }

		else if(Cfirout == 4){ break; }

		else{

			printf("아무래도 잘못 입력하신듯 싶습니다. 다시 입력해 주십시오 : \n");

			scanf("%d",&Cfirout);

		}

	}

	int x;

	int x_check;

	char flag;

	//===================================================================================

	printf("프로그램을 시작 하기 전 아래 준수 사항을 반드시 확인하시기 바랍니다.\n");

	printf("본 프로그램은 CMD에서 system 명령어를 사용합니다.\n");

	printf("또한 Network와 관련된 통신을 할 수 있습니다.\n");

	printf("명령어와 관련된 자세한 내용을 보시겠습니까?\n");

	printf("(true = 1 false = 0)\n");

	scanf("%d",&x_check);

	if(x_check){

		printf("systeminfo명령어를 사용함으로서 자세한 system의 정보를 수집합니다.\n");

		printf("Telnet과 관련된 명령어를 사용할 수 있습니다.\n");

		printf("Config폴더에 접근하는 명령어를 사용할 수 있습니다.\n");

		printf("관리자 암호와 관련된 명령어를 사용할 수 있습니다.\n");

		printf("관리자 계정 생성 여부를 확인하고 없다면 관리자 계정을 생성합니다.\n");

		printf("백신 정보 확인을 위해 폴더에 접근합니다.\n");

		printf("그 외 추가적인 명령어가 있을 수 있습니다.\n");

		printf("이상 프로그램 설치/ip Address 수집/MAC정보 수집/그 외 추가적인 정보 유출은 없습니다.\n");

		printf("모든 정보를 확인하셨다면 아무 수를 입력하십시오.\n");

		scanf("%d",&x_check);

	}	

	//===================================================================================

	system("cls");

	printf("시스템 정보를 확인합니다 잠시 기다려 주십시오.\n");

	system("systeminfo");

	scanf("%d",&x_check);

	//====================================================================================

	_chdir("C:\windows\system32");

	system("cls");

	system("color 1F");

	printf("***    SSW first Check List ! - system 접근 ***\n\n");

	printf("보안점검 1단계. System32 폴더의 Config 폴더 접근하기\n");

	printf("특히 Windows 7 사용자일경우 사용자 암호와 사용자 보안이 잘 되있을경우 프로그램이 Config 폴더에 접근하는것이 금지됩니다.\n");

	printf("Config 폴더는 컴퓨터 시스템에 주요한 시스템 파일이 들어있는 폴더로, 보통 보안 설정이 되어있는 컴퓨터는 Config 폴더의 접근을 거부합니다\n");

	printf("따라서 SSW는 Config 폴더에 접근하여 정상적으로 접근이 되는지 체크할 것입니다.\n");

	printf("접근이 거부될 경우 보안설정이 잘 되어있는 컴퓨터입니다.\n\n");

	printf("Config 폴더에 접근합니까? (Y/N): "); 

	scanf("%c%c",&flag,&flag);

	if(flag == 'Y'){

		system("color 4F");

		_chdir("config");

		if(_chdir("config") == -1){

			system("color 1F");

			printf("Config 폴더에 접근이 거부 되었습니다.\n");

			printf("보안점검 완료\n");

			SafeScore++;

		}

		else{

			system("color 4F");

			printf("Config 폴더에 정상적으로 접근되었습니다...\n");

			printf("시스템 암호와 보안설정을 해주십시오\n");

			DangerScore++;

		}

	}

	else{

		system("color 4F");

		printf("접근을 취소합니다\n");

		DangerScore++;

	}

	printf("다음 단계로 가시겠습니까? (Y/N): "); scanf("%c%c",&flag,&flag);

	if(flag=='Y'){

		system("cls");

		system("color 1F");

		printf("***    SSW Second Check List ! - Administrator 계정 사용 ***\n\n");

		printf("보안점검 2단계. net user 명령어로 관리자 계정 설정을 시작합니다.\n관리자 계정에 암호가 없다면 암호를 만들 수 있습니다.\n");

		printf("net user 명령어는 계정생성, 계정확인, 계정삭제 등을 주관하는 명령어로, Administrator, 즉 관리자 계정을 설정해볼 수 있습니다.\n");

		printf("관리자 계정이 정상적으로 설정되어 있다면 엑세스 거부 명령어가 사용될 것입니다.\n");

		printf("관리자 계정 검색을 시작합니까? (Y/N) : ");scanf("%c%c",&flag,&flag);

		if(flag == 'Y'){

			system("color 4F");

			if(system("net user administrator") == -1){

				system("color 4F");

				printf("관리자 계정이 설정되어있지 않습니다\n");

				DangerScore++;

			}

			else{

				system("color 1F");

				SafeScore++;

				printf("관리자 계정이 설정되어있습니다. 관리자 계정의 암호를 설정하시겠습니까?(Y,N)");

				scanf("%c%c",&s,&s);

				if(s == 'Y'){

					system("net user administrator *");

					printf("암호 설정에 엑세스가 거부되었을경우 이미 암호가 존재하거나 프로그램이 보안설정으로 인해 접근하지 못하기 때문입니다.\n");

				}

			}

		}

	}

	else{

		system("color 4F");

		printf("관리자계정 검색을 취소합니다.\n");

		DangerScore++;

	}

	int vacine=0;

	printf("다음단계로 가시겠습니까? (Y/N) : "); scanf("%c%c",&flag,&flag);

	system("cls");

	system("color 1F");

	//check

	printf("***    SSW Third Check List ! - 백신 프로그램 사용 여부 확인***\n\n");

	printf("귀하의 컴퓨터에서 백신 프로그램의 사용 여부를 확인할것입니다.\n");

	printf("SSW 에 있는 백신 DB에는 V3, Alyac, Kaspersky, Virus Chaser 등이 있으며 만일 백신이 두가지 이상 설치되어있을경우 당신의 컴퓨터는\n");

	printf("백신 충돌로 인하여 위험 할 수 있으니 주의해주시기 바랍니다.\n");

	//백신이 두개이상 발견되면 이미지 출력하기로 하자 ㅇㅇ.

	printf("Ahn Lab - V3 백신 시스템의 설치 여부를 검사합니다.\n");

	printf("백신 프로그램을 검색하겠습니까? (Y/N) : "); scanf("%c%c",&flag,&flag);

	//백신 점검해라

	if(flag == 'Y'){

		system("color 4F");

		if( _chdir("C:\Program Files\AhnLab") ){//Not AhnLab

			system("color 1F");

			printf("V3 설치를 확인하였습니다\n");

			SafeScore++;

			vacine++;

		}

		else {

			printf("C:\Program Files\AhnLab ... Notfound!\n");

		}

		printf("EstSoft - Alyac 백신 시스템의 설치 여부를 검사합니다.\n");

		system("color 4F");

		if(_chdir("C:\program files\estsoft\alyac") == 0){

			system("color 1F");

			printf("Alyac 백신 시스템의 설치 여부를 확인하였습니다.\n");

			SafeScore++;

			vacine++;

		}

		else{

			printf("C:\Program Files\EstSoft\Alyac ... Notfound!\n");

		}

		printf("네이버 백신 설치 여부를 검사합니다.\n");

		system("color 4F");

		if(_chdir("C:\Program Files\Naver\Security")==0){

			system("color 1F");

			printf("네이버 백신의 설치 여부를 검사하였습니다\n");

			SafeScore++;

			vacine++;

		}

		else{

			printf("C:\Program Files\Naver\Security ,,, Notfound!\n");

		}

		printf("Kaspersky Lab 설치 여부를 검사합니다.\n");

		system("color 4F");

		if(_chdir("C:\Program Files\Kaspersky Lab")==0){

			system("color 1F");

			printf("Kaspersky Lab의 설치 여부를 검사했습니다.\n");

			SafeScore++;

			vacine++;

		}

		else{

			printf("C:\Program Files\Kaspersky Lab ... Notfound!\n");

		}

		printf("Alwil software - Avast 설치 여부를 검사합니다.\n");

		system("color 4F");

		if(_chdir("C:\Documents and settings\All Users\Alwil Software")==0){

			system("color 1F");

			printf("Avast 설치 여부를 검사했습니다.\n");

			SafeScore++;

			vacine++;

		}

		printf("Virus Chaser 설치 여부를 확인합니다\n");

		system("color 4F");

		if(_chdir("C:\Program Files\Virus Chaser")==0){

			system("color 1F");

			printf("Virus Chaser의 설치 여부를 확인하였습니다.\n");

			SafeScore++;

			vacine++;

		}

		else{

			printf("C:\Program Files\Virus Chaser ... Notfound!\n");

		}

		printf("");

	}

	else{

		printf("백신 프로그램 검색을 하지 않습니다.\n");

		DangerScore++;

	}// Megapass+

	system("color 1F");

	printf("백신 확인을 모두 끝냈습니다.\n");

	printf("귀하의 보유 백신 수 : %d\n",vacine);

	if(vacine >=2){

		printf("귀하의 컴퓨터 시스템에는 백신의 수가 2개 이상 발견되었습니다.\n");

		printf("컴퓨터 시스템에 백신수가 2개 이상 있을경우 충돌이 발생할 수 있으니 백신의 수를 1개로 줄여주십시오.\n");

	}

	else if(vacine ==0){

		printf("컴퓨터에 백신이 존재하지 않습니다.\n");

		printf("백신을 반드시 설치해주시기 바랍니다.\n");

		DangerScore++;

	}

	else if(vacine == 1){

		printf("백신의 수가 1개입니다. 귀하의 컴퓨터는 안전합니다.\n");

		SafeScore++;

	}

	scanf("%d",x_check);

 

}
